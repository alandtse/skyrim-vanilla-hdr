// ---- Created with 3Dmigoto v1.3.8 on Wed Jun 29 13:58:05 2022
Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[11];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[45];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = cb12[43].xy * v1.xy;
  r0.xy = max(float2(0,0), r0.xy);
  r1.x = min(cb12[44].z, r0.x);
  r1.y = min(cb12[43].y, r0.y);
  r0.x = t1.Sample(s1_s, r1.xy).x;
  r2.xyzw = t0.SampleLevel(s0_s, r1.xy, 0).xyzw;
  r0.y = cmp(0.5 < cb2[10].z);
  if (r0.y != 0) {
    r0.yz = t3.SampleLevel(s3_s, r1.xy, 0).zw;
    r0.y = cmp(9.99999975e-006 >= r0.y);
    r0.z = cmp(9.99999975e-006 < r0.z);
    r0.y = r0.z ? r0.y : 0;
    r3.xyzw = t6.Sample(s6_s, r1.xy).xyzw;
    if (r0.y != 0) {
      r0.yzw = r3.xyz * r3.www;
      r0.yzw = cb2[10].xxx * r0.yzw;
      r3.xyz = cb2[10].yyy * r2.xyz;
      r0.yzw = max(float3(0,0,0), r0.yzw);
      r0.yzw = min(r0.yzw, r3.xyz);
    } else {
      r0.yzw = float3(0,0,0);
    }
    r2.xyz = r2.xyz + r0.yzw;
  }
  r0.y = cmp(0 != cb2[5].w);
  if (r0.y != 0) {
    r0.zw = t4.Sample(s4_s, r1.xy).yx;
    r2.xyz = r0.www * r0.zzz + r2.xyz;
  } else {
    r0.z = 0;
  }
  r0.w = cmp(9.99999975e-006 < r0.z);
  r0.w = r0.w ? r0.y : 0;
  r1.z = cb2[8].x + r0.x;
  r1.z = min(1, r1.z);
  r0.x = r0.w ? r1.z : r0.x;
  r2.xyz = r2.xyz * r0.xxx;
  r0.x = cmp(r0.z != 0.000000);
  r0.x = r0.x ? r0.y : 0;
  r0.y = cmp(9.99999975e-006 < cb2[7].z);
  r0.x = r0.y ? r0.x : 0;
  if (r0.x != 0) {
    r3.z = t2.SampleLevel(s2_s, r1.xy, 0).x;
    r0.x = t5.SampleLevel(s5_s, r1.xy, 0).x;
    r0.yw = v1.xy * float2(1,-1) + float2(0,1);
    r3.xy = r0.yw * float2(2,2) + float2(-1,-1);
    r3.w = 1;
    r1.x = dot(cb12[32].xyzw, r3.xyzw);
    r1.y = dot(cb12[33].xyzw, r3.xyzw);
    r1.z = dot(cb12[34].xyzw, r3.xyzw);
    r0.y = dot(cb12[35].xyzw, r3.xyzw);
    r1.xyz = r1.xyz / r0.yyy;
    r1.xyz = cb12[40].xyz + r1.xyz;
    r3.xyz = cb2[7].xxx * r1.xyz;
    r4.xyz = float3(0.0700000003,0.0700000003,0.0700000003) * r3.xyz;
    r0.y = dot(r4.xyz, float3(0.333333343,0.333333343,0.333333343));
    r4.xyz = r3.xyz * float3(0.0700000003,0.0700000003,0.0700000003) + r0.yyy;
    r4.xyz = floor(r4.xyz);
    r3.xyz = r3.xyz * float3(0.0700000003,0.0700000003,0.0700000003) + -r4.xyz;
    r0.y = dot(r4.xyz, float3(0.166666672,0.166666672,0.166666672));
    r3.xyz = r3.xyz + r0.yyy;
    r5.xyz = cmp(r3.zxy >= r3.xyz);
    r6.xyz = r5.yzx ? float3(1,1,1) : 0;
    r5.xyz = r5.xyz ? float3(0,0,0) : float3(1,1,1);
    r7.xyz = min(r6.xyz, r5.xyz);
    r5.xyz = max(r6.yzx, r5.yzx);
    r6.xyz = -r7.xyz + r3.xyz;
    r6.xyz = float3(0.166666672,0.166666672,0.166666672) + r6.xyz;
    r8.xyz = -r5.zxy + r3.xyz;
    r8.xyz = float3(0.333333343,0.333333343,0.333333343) + r8.xyz;
    r9.xyz = float3(-0.5,-0.5,-0.5) + r3.xyz;
    r10.xyz = float3(0.00346020772,0.00346020772,0.00346020772) * r4.xyz;
    r10.xyz = floor(r10.xyz);
    r4.xyz = -r10.xyz * float3(289,289,289) + r4.xyz;
    r10.xw = float2(0,1);
    r10.y = r7.z;
    r10.z = r5.y;
    r10.xyzw = r10.xyzw + r4.zzzz;
    r11.xyzw = r10.xyzw * float4(34,34,34,34) + float4(1,1,1,1);
    r10.xyzw = r11.xyzw * r10.xyzw;
    r11.xyzw = float4(0.00346020772,0.00346020772,0.00346020772,0.00346020772) * r10.xyzw;
    r11.xyzw = floor(r11.xyzw);
    r10.xyzw = -r11.xyzw * float4(289,289,289,289) + r10.xyzw;
    r10.xyzw = r10.xyzw + r4.yyyy;
    r11.xw = float2(0,1);
    r11.y = r7.y;
    r11.z = r5.x;
    r10.xyzw = r11.xyzw + r10.xyzw;
    r11.xyzw = r10.xyzw * float4(34,34,34,34) + float4(1,1,1,1);
    r10.xyzw = r11.xyzw * r10.xyzw;
    r11.xyzw = float4(0.00346020772,0.00346020772,0.00346020772,0.00346020772) * r10.xyzw;
    r11.xyzw = floor(r11.xyzw);
    r10.xyzw = -r11.xyzw * float4(289,289,289,289) + r10.xyzw;
    r4.xyzw = r10.xyzw + r4.xxxx;
    r5.xw = float2(0,1);
    r5.y = r7.x;
    r4.xyzw = r5.xyzw + r4.xyzw;
    r5.xyzw = r4.xyzw * float4(34,34,34,34) + float4(1,1,1,1);
    r4.xyzw = r5.xyzw * r4.xyzw;
    r5.xyzw = float4(0.00346020772,0.00346020772,0.00346020772,0.00346020772) * r4.xyzw;
    r5.xyzw = floor(r5.xyzw);
    r4.xyzw = -r5.xyzw * float4(289,289,289,289) + r4.xyzw;
    r5.xyzw = float4(0.0204081647,0.0204081647,0.0204081647,0.0204081647) * r4.xyzw;
    r5.xyzw = floor(r5.xyzw);
    r4.xyzw = -r5.xyzw * float4(49,49,49,49) + r4.xyzw;
    r5.xyzw = float4(0.142857149,0.142857149,0.142857149,0.142857149) * r4.xyzw;
    r5.xyzw = floor(r5.xyzw);
    r4.xyzw = -r5.xyzw * float4(7,7,7,7) + r4.xyzw;
    r5.xyzw = r5.xyzw * float4(0.285714298,0.285714298,0.285714298,0.285714298) + float4(-0.928571403,-0.928571403,-0.928571403,-0.928571403);
    r4.xyzw = r4.xzyw * float4(0.285714298,0.285714298,0.285714298,0.285714298) + float4(-0.928571403,-0.928571403,-0.928571403,-0.928571403);
    r7.xyzw = float4(1,1,1,1) + -abs(r5.xyzw);
    r7.xyzw = r7.xywz + -abs(r4.xzwy);
    r10.xz = floor(r5.xy);
    r10.yw = floor(r4.xz);
    r10.xyzw = r10.xyzw * float4(2,2,2,2) + float4(1,1,1,1);
    r11.xz = floor(r5.zw);
    r11.yw = floor(r4.yw);
    r11.xyzw = r11.xyzw * float4(2,2,2,2) + float4(1,1,1,1);
    r12.xyzw = cmp(float4(0,0,0,0) >= r7.xywz);
    r12.xyzw = r12.xyzw ? float4(-1,-1,-1,-1) : float4(-0,-0,-0,-0);
    r13.xz = r5.xy;
    r13.yw = r4.xz;
    r10.xyzw = r10.zwxy * r12.yyxx + r13.zwxy;
    r4.xz = r5.zw;
    r4.xyzw = r11.xyzw * r12.zzww + r4.xyzw;
    r5.xy = r10.zw;
    r5.z = r7.x;
    r11.x = dot(r5.xyz, r5.xyz);
    r10.z = r7.y;
    r11.y = dot(r10.xyz, r10.xyz);
    r12.xy = r4.xy;
    r12.z = r7.w;
    r11.z = dot(r12.xyz, r12.xyz);
    r7.xy = r4.zw;
    r11.w = dot(r7.xyz, r7.xyz);
    r4.xyzw = -r11.xyzw * float4(0.853734732,0.853734732,0.853734732,0.853734732) + float4(1.79284286,1.79284286,1.79284286,1.79284286);
    r5.xyz = r5.xyz * r4.xxx;
    r10.xyz = r10.xyz * r4.yyy;
    r4.xyz = r12.xyz * r4.zzz;
    r7.xyz = r7.xyz * r4.www;
    r11.x = dot(r3.xyz, r3.xyz);
    r11.y = dot(r6.xyz, r6.xyz);
    r11.z = dot(r8.xyz, r8.xyz);
    r11.w = dot(r9.xyz, r9.xyz);
    r11.xyzw = float4(0.600000024,0.600000024,0.600000024,0.600000024) + -r11.xyzw;
    r11.xyzw = max(float4(0,0,0,0), r11.xyzw);
    r11.xyzw = r11.xyzw * r11.xyzw;
    r11.xyzw = r11.xyzw * r11.xyzw;
    r3.x = dot(r5.xyz, r3.xyz);
    r3.y = dot(r10.xyz, r6.xyz);
    r3.z = dot(r4.xyz, r8.xyz);
    r3.w = dot(r7.xyz, r9.xyz);
    r0.y = dot(r11.xyzw, r3.xyzw);
    r0.y = r0.y * 42 + 1;
    r0.y = 0.5 * r0.y;
    r0.w = rcp(r0.y);
    r0.w = saturate(r0.w);
    r1.xyz = -cb2[5].xyz + r1.xyz;
    r1.x = dot(r1.xyz, r1.xyz);
    r1.x = sqrt(r1.x);
    r1.y = 1 / cb2[8].y;
    r1.x = saturate(r1.x * r1.y);
    r1.y = r1.x * -2 + 3;
    r1.x = r1.x * r1.x;
    r1.x = -r1.y * r1.x + 1;
    r1.y = 1 + -r0.x;
    r0.x = r1.y * cb2[9].x + r0.x;
    r0.y = r0.y * r0.w;
    r0.y = log2(abs(r0.y));
    r0.y = cb2[6].z * r0.y;
    r0.y = exp2(r0.y);
    r0.w = cmp(r0.y < cb2[6].w);
    r0.y = cb2[6].x * r0.y;
    r0.y = r0.w ? 0 : r0.y;
    r0.x = r0.y * r0.x;
    r0.x = r0.x * r1.x;
  } else {
    r0.x = 0;
  }
  r0.y = 1 + -cb2[7].w;
  r1.w = r0.x * r0.z;
  r1.xyz = cb2[9].yzw * r1.www;
  o0.xyzw = r2.xyzw * r0.yyyy + r1.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[45], immediateIndexed
dcl_constantbuffer cb2[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 14
mul r0.xy, v1.xyxx, cb12[43].xyxx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r1.x, r0.x, cb12[44].z
min r1.y, r0.y, cb12[43].y
sample_indexable(texture2d)(float,float,float,float) r0.x, r1.xyxx, t1.xyzw, s1
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
lt r0.y, l(0.500000), cb2[10].z
if_nz r0.y
  sample_l_indexable(texture2d)(float,float,float,float) r0.yz, r1.xyxx, t3.xzwy, s3, l(0.000000)
  ge r0.y, l(0.000010), r0.y
  lt r0.z, l(0.000010), r0.z
  and r0.y, r0.z, r0.y
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyxx, t6.xyzw, s6
  if_nz r0.y
    mul r0.yzw, r3.wwww, r3.xxyz
    mul r0.yzw, r0.yyzw, cb2[10].xxxx
    mul r3.xyz, r2.xyzx, cb2[10].yyyy
    max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r0.yzw, r3.xxyz, r0.yyzw
  else 
    mov r0.yzw, l(0,0,0,0)
  endif 
  add r2.xyz, r0.yzwy, r2.xyzx
endif 
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[5].w
if_nz r0.y
  sample_indexable(texture2d)(float,float,float,float) r0.zw, r1.xyxx, t4.zwyx, s4
  mad r2.xyz, r0.wwww, r0.zzzz, r2.xyzx
else 
  mov r0.z, l(0)
endif 
lt r0.w, l(0.000010), r0.z
and r0.w, r0.w, r0.y
add r1.z, r0.x, cb2[8].x
min r1.z, r1.z, l(1.000000)
movc r0.x, r0.w, r1.z, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
ne r0.x, r0.z, l(0.000000)
and r0.x, r0.x, r0.y
lt r0.y, l(0.000010), cb2[7].z
and r0.x, r0.y, r0.x
if_nz r0.x
  sample_l_indexable(texture2d)(float,float,float,float) r3.z, r1.xyxx, t2.yzxw, s2, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.x, r1.xyxx, t5.xyzw, s5, l(0.000000)
  mad r0.yw, v1.xxxy, l(0.000000, 1.000000, 0.000000, -1.000000), l(0.000000, 0.000000, 0.000000, 1.000000)
  mad r3.xy, r0.ywyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mov r3.w, l(1.000000)
  dp4 r1.x, cb12[32].xyzw, r3.xyzw
  dp4 r1.y, cb12[33].xyzw, r3.xyzw
  dp4 r1.z, cb12[34].xyzw, r3.xyzw
  dp4 r0.y, cb12[35].xyzw, r3.xyzw
  div r1.xyz, r1.xyzx, r0.yyyy
  add r1.xyz, r1.xyzx, cb12[40].xyzx
  mul r3.xyz, r1.xyzx, cb2[7].xxxx
  mul r4.xyz, r3.xyzx, l(0.070000, 0.070000, 0.070000, 0.000000)
  dp3 r0.y, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
  mad r4.xyz, r3.xyzx, l(0.070000, 0.070000, 0.070000, 0.000000), r0.yyyy
  round_ni r4.xyz, r4.xyzx
  mad r3.xyz, r3.xyzx, l(0.070000, 0.070000, 0.070000, 0.000000), -r4.xyzx
  dp3 r0.y, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
  add r3.xyz, r0.yyyy, r3.xyzx
  ge r5.xyz, r3.zxyz, r3.xyzx
  and r6.xyz, r5.yzxy, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  movc r5.xyz, r5.xyzx, l(0,0,0,0), l(1.000000,1.000000,1.000000,0)
  min r7.xyz, r5.xyzx, r6.xyzx
  max r5.xyz, r5.yzxy, r6.yzxy
  add r6.xyz, r3.xyzx, -r7.xyzx
  add r6.xyz, r6.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)
  add r8.xyz, r3.xyzx, -r5.zxyz
  add r8.xyz, r8.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
  add r9.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  mul r10.xyz, r4.xyzx, l(0.003460, 0.003460, 0.003460, 0.000000)
  round_ni r10.xyz, r10.xyzx
  mad r4.xyz, -r10.xyzx, l(289.000000, 289.000000, 289.000000, 0.000000), r4.xyzx
  mov r10.xw, l(0,0,0,1.000000)
  mov r10.y, r7.z
  mov r10.z, r5.y
  add r10.xyzw, r4.zzzz, r10.xyzw
  mad r11.xyzw, r10.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r10.xyzw, r10.xyzw, r11.xyzw
  mul r11.xyzw, r10.xyzw, l(0.003460, 0.003460, 0.003460, 0.003460)
  round_ni r11.xyzw, r11.xyzw
  mad r10.xyzw, -r11.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000), r10.xyzw
  add r10.xyzw, r4.yyyy, r10.xyzw
  mov r11.xw, l(0,0,0,1.000000)
  mov r11.y, r7.y
  mov r11.z, r5.x
  add r10.xyzw, r10.xyzw, r11.xyzw
  mad r11.xyzw, r10.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r10.xyzw, r10.xyzw, r11.xyzw
  mul r11.xyzw, r10.xyzw, l(0.003460, 0.003460, 0.003460, 0.003460)
  round_ni r11.xyzw, r11.xyzw
  mad r10.xyzw, -r11.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000), r10.xyzw
  add r4.xyzw, r4.xxxx, r10.xyzw
  mov r5.xw, l(0,0,0,1.000000)
  mov r5.y, r7.x
  add r4.xyzw, r4.xyzw, r5.xyzw
  mad r5.xyzw, r4.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r4.xyzw, r4.xyzw, r5.xyzw
  mul r5.xyzw, r4.xyzw, l(0.003460, 0.003460, 0.003460, 0.003460)
  round_ni r5.xyzw, r5.xyzw
  mad r4.xyzw, -r5.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000), r4.xyzw
  mul r5.xyzw, r4.xyzw, l(0.020408, 0.020408, 0.020408, 0.020408)
  round_ni r5.xyzw, r5.xyzw
  mad r4.xyzw, -r5.xyzw, l(49.000000, 49.000000, 49.000000, 49.000000), r4.xyzw
  mul r5.xyzw, r4.xyzw, l(0.142857, 0.142857, 0.142857, 0.142857)
  round_ni r5.xyzw, r5.xyzw
  mad r4.xyzw, -r5.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000), r4.xyzw
  mad r5.xyzw, r5.xyzw, l(0.285714, 0.285714, 0.285714, 0.285714), l(-0.928571, -0.928571, -0.928571, -0.928571)
  mad r4.xyzw, r4.xzyw, l(0.285714, 0.285714, 0.285714, 0.285714), l(-0.928571, -0.928571, -0.928571, -0.928571)
  add r7.xyzw, -|r5.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
  add r7.xyzw, -|r4.xzwy|, r7.xywz
  round_ni r10.xz, r5.xxyx
  round_ni r10.yw, r4.xxxz
  mad r10.xyzw, r10.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
  round_ni r11.xz, r5.zzwz
  round_ni r11.yw, r4.yyyw
  mad r11.xyzw, r11.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
  ge r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xywz
  movc r12.xyzw, r12.xyzw, l(-1.000000,-1.000000,-1.000000,-1.000000), l(-0.000000,-0.000000,-0.000000,-0.000000)
  mov r13.xz, r5.xxyx
  mov r13.yw, r4.xxxz
  mad r10.xyzw, r10.zwxy, r12.yyxx, r13.zwxy
  mov r4.xz, r5.zzwz
  mad r4.xyzw, r11.xyzw, r12.zzww, r4.xyzw
  mov r5.xy, r10.zwzz
  mov r5.z, r7.x
  dp3 r11.x, r5.xyzx, r5.xyzx
  mov r10.z, r7.y
  dp3 r11.y, r10.xyzx, r10.xyzx
  mov r12.xy, r4.xyxx
  mov r12.z, r7.w
  dp3 r11.z, r12.xyzx, r12.xyzx
  mov r7.xy, r4.zwzz
  dp3 r11.w, r7.xyzx, r7.xyzx
  mad r4.xyzw, -r11.xyzw, l(0.853735, 0.853735, 0.853735, 0.853735), l(1.792843, 1.792843, 1.792843, 1.792843)
  mul r5.xyz, r4.xxxx, r5.xyzx
  mul r10.xyz, r4.yyyy, r10.xyzx
  mul r4.xyz, r4.zzzz, r12.xyzx
  mul r7.xyz, r4.wwww, r7.xyzx
  dp3 r11.x, r3.xyzx, r3.xyzx
  dp3 r11.y, r6.xyzx, r6.xyzx
  dp3 r11.z, r8.xyzx, r8.xyzx
  dp3 r11.w, r9.xyzx, r9.xyzx
  add r11.xyzw, -r11.xyzw, l(0.600000, 0.600000, 0.600000, 0.600000)
  max r11.xyzw, r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mul r11.xyzw, r11.xyzw, r11.xyzw
  mul r11.xyzw, r11.xyzw, r11.xyzw
  dp3 r3.x, r5.xyzx, r3.xyzx
  dp3 r3.y, r10.xyzx, r6.xyzx
  dp3 r3.z, r4.xyzx, r8.xyzx
  dp3 r3.w, r7.xyzx, r9.xyzx
  dp4 r0.y, r11.xyzw, r3.xyzw
  mad r0.y, r0.y, l(42.000000), l(1.000000)
  mul r0.y, r0.y, l(0.500000)
  rcp r0.w, r0.y
  mov_sat r0.w, r0.w
  add r1.xyz, r1.xyzx, -cb2[5].xyzx
  dp3 r1.x, r1.xyzx, r1.xyzx
  sqrt r1.x, r1.x
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[8].y
  mul_sat r1.x, r1.y, r1.x
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r1.y, r1.x, l(1.000000)
  add r1.y, -r0.x, l(1.000000)
  mad r0.x, r1.y, cb2[9].x, r0.x
  mul r0.y, r0.w, r0.y
  log r0.y, |r0.y|
  mul r0.y, r0.y, cb2[6].z
  exp r0.y, r0.y
  lt r0.w, r0.y, cb2[6].w
  mul r0.y, r0.y, cb2[6].x
  movc r0.y, r0.w, l(0), r0.y
  mul r0.x, r0.x, r0.y
  mul r0.x, r1.x, r0.x
else 
  mov r0.x, l(0)
endif 
add r0.y, -cb2[7].w, l(1.000000)
mul r1.w, r0.z, r0.x
mul r1.xyz, r1.wwww, cb2[9].yzwy
mad_sat o0.xyzw, r2.xyzw, r0.yyyy, r1.xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
